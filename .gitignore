# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
bin/
dist/

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out
coverage.out
coverage.html
coverage/

# Dependency directories (remove the comment below to include it)
vendor/

# Go workspace file
go.work
go.work.sum

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Build artifacts
build/
dist/
target/

# Benchmark results
benchmarks.txt
benchmark.txt
*.bench

# Profile files
*.prof
*.pprof
cpu.prof
mem.prof
profile.out

# Test cache
.testcache/

# Documentation generated files
doc.html

# Temporary files
tmp/
temp/
*.tmp

# Environment variables
.env
.env.local
.env.test

# Configuration files (keep templates)
config.yaml
config.json
!config.template.*
!config.example.*

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
node_modules/

# Package manager files
package-lock.json
yarn.lock

# Docker
docker-compose.override.yml
.dockerignore.bak

# Kubernetes
k8s-config.yaml

# Certificates and keys
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# Backup files
*.bak
*.backup
*~

# Go module download cache
go.sum.backup

# Development tools
.tools/

# CI/CD artifacts
.github/workflows/artifacts/
ci-results/

# Performance monitoring
jaeger/
prometheus/

# Local development
local/
dev/
debug/

# Project specific
examples/output/
generated/
migrations/data/
test-data/

# Security scan results
gosec-report.json
security-scan.txt

# Dependency check results
dependency-check-report.html

# Air live reload
.air.toml
tmp/

# Wire generated files
wire_gen.go

# Mockgen generated files
*_mock.go
mocks/

# Protocol buffer generated files
*.pb.go
*.pb.gw.go

# gRPC gateway generated files
*.gw.go

# Swagger/OpenAPI generated files
api/swagger/
docs/swagger/

# Assets and static files (if dynamically generated)
assets/dist/
static/dist/

# Go modules workspace
go.work
go.work.sum

# ===================================================================
# Project Cleanup Enhancement - Added 2025-01-27
# 防止清理过程中发现的中间产物再次出现
# ===================================================================

# Python 缓存 (项目中不应该存在Python代码)
__pycache__/
*.py[cod]
*$py.class
.mypy_cache/
.dmypy.json
dmypy.json
.pytest_cache/

# 临时分析和错误检查文件
errcheck_results.txt
errcheck_full_results.txt
errcheck_*.txt
analyze_errors.py
analyze_*.py
*_analysis.txt
*_results.txt

# 质量保障系统生成的报告目录
quality-reports/
reports/

# 编译产物 (确保所有平台的可执行文件被忽略)
*.exe
*.exe~
*.out
*.test
main
debug
debug.test

# 临时和备份文件增强
*.orig
*.tmp
*.temp
.tmp/
.temp/
*~
*.bak
*.backup

# IDE配置增强 (保留项目级配置，忽略个人配置)
.vscode/settings.json.backup
.idea/workspace.xml
.idea/tasks.xml
.idea/usage.statistics.xml
.idea/shelf/

# 额外的日志和调试文件
debug.log
error.log
trace.log
*.debug
debug_*

# 确保重要文件不被忽略
!scripts/
!.github/workflows/
!.golangci.yml
!CONTRIBUTING.md
!README*.md
!QUALITY*.md
!FINAL*.md
# Assessment test results
*_results.json
*_evaluation*.json
*_assessment*.json
